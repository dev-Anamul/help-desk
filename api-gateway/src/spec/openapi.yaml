openapi: 3.0.0
info:
  version: 1.0.0
  title: Help Desk API
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  description: '"Help Desk" is a comprehensive customer support application designed to streamline and optimize customer service operations. With intuitive ticket management, efficient communication tools, and a robust knowledge base, Help Desk empowers organizations to provide prompt assistance and resolution to customer inquiries and issues. From ticket submission to resolution, Help Desk ensures a seamless support experience, enhancing customer satisfaction and loyalty.'
  contact:
    name: Pixfar Development Team
    url: https://pixfar.com
    email: anamul@pixfar.com
servers:
  - description: Local Development
    url: http://127.0.0.1:6050
  - description: Production
    url: https://api.easy-tax.pixfar.com
tags:
  - name: Auth
    description: Authentication endpoints (public)
  - name: Category
    description: Category endpoints (private)
  - name: System
    description: System endpoints (private)
  - name: Team
    description: Team endpoints (private)
  - name: Ticket
    description: Ticket endpoints (private)
  - name: User
    description: User endpoints (private)
paths:
  /api/v1/auth/login:
    post:
      description: Login to the application
      operationId: login
      summary: Login
      security: []
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIxIiwiaWF0IjoxNjI5MjM5MDIyfQ.7
        '400':
          $ref: '#/components/responses/400'
components:
  parameters:
    id:
      in: path
      name: id
      required: true
      schema:
        type: string
        example: '1'
    page:
      in: query
      name: page
      required: false
      schema:
        type: integer
        example: 1
        default: 1
  schemas:
    login:
      type: object
      properties:
        email:
          type: string
          format: email
          example: example@gmail.com
        password:
          type: string
          example: password
      required:
        - email
        - password
  responses:
    '400':
      description: bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 400
              message:
                type: string
                example: Bad request
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 401
              message:
                type: string
                example: Unauthorized
    '403':
      description: forbidden
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 403
              message:
                type: string
                example: Forbidden
    '404':
      description: not found
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 404
              message:
                type: string
                example: Not found
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
